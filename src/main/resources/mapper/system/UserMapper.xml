<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mx.ai.sports.system.mapper.UserMapper">

    <select id="findVoById" parameterType="long" resultType="com.mx.ai.sports.system.vo.UserVo">
        SELECT
            su.USER_ID AS userId,
            su.USERNAME AS username,
            su.CREATE_TIME AS createTime,
            su.MODIFY_TIME AS modifyTime,
            su.LAST_LOGIN_TIME AS lastLoginTime,
            su.SEX AS sex,
            su.AVATAR AS avatar,
            su.FULL_NAME AS fullName,
            su.DEVICE_ID AS deviceId,
            su.DEVICE_TYPE AS deviceType,
            su.ROLE_ID AS roleId,
            su.SCHOOL_ID AS schoolId,
            su.CLASSES_ID AS classesId,
            su.SNO AS sno,
            ss.SCHOOL_NAME schoolName
        FROM
            SYS_USER su
            LEFT JOIN SYS_SCHOOL ss ON su.SCHOOL_ID = ss.SCHOOL_ID
        WHERE
            su.USER_ID = #{userId}
    </select>
    <select id="findByClassesId" resultType="com.mx.ai.sports.system.vo.UserSmallVo">
        SELECT
            su.USER_ID AS userId,
            su.FULL_NAME AS fullName,
            su.SEX AS sex,
            su.AVATAR AS avatar,
            su.SNO AS sno
        FROM
            SYS_USER su
        WHERE
            su.CLASSES_ID = #{classesId}
    </select>
    <select id="findStudentBySchoolId" resultType="com.mx.ai.sports.system.entity.User">
        SELECT USER_ID, DEVICE_ID
        FROM
            SYS_USER
        WHERE
            SCHOOL_ID = #{schoolId}
            AND ROLE_ID = 1
    </select>
    <select id="findSubjectByUserId" resultType="com.mx.ai.sports.system.vo.SubjectStudentVo">
        SELECT
            su.SUBJECT_ID AS subjectId,
            asu.NUMBER AS number,
            asu.`NAME` AS subjectName,
            su.SUBJECT_SEQ_ID AS subjectSeqId,
            ass.SEQ AS seq,
            su.TEACHER_ID AS teacherId,
            sut.FULL_NAME AS teacherName
        FROM
            APP_SUBJECT asu,
            APP_SUBJECT_SEQ ass,
            SYS_USER su,
            SYS_USER sut
        WHERE
            su.SUBJECT_ID = asu.SUBJECT_ID
            AND su.SUBJECT_SEQ_ID = ass.SUBJECT_SEQ_ID
            AND su.TEACHER_ID = sut.USER_ID
            AND su.USER_ID = #{userId}
    </select>

    <select id="findAddUserCount" resultType="com.mx.ai.sports.system.vo.UserCountVo">
       SELECT
            t1.createTime AS date,
            t1.studentCount,
            IFNULL( t2.teacherCount, 0 ) AS teacherCount
        FROM
        (
            SELECT DISTINCT
            (
                DATE_FORMAT( su.CREATE_TIME, '%Y-%m-%d' )) AS createTime,
                count( su.USER_ID ) AS studentCount
            FROM
                SYS_USER su
            WHERE
                su.CREATE_TIME >= #{startTime}
                <![CDATA[
                AND su.CREATE_TIME <= #{endTime}
                ]]>
                AND su.ROLE_ID = 1
            GROUP BY
                createTime
        ) t1
        LEFT JOIN (
            SELECT DISTINCT
            (
                DATE_FORMAT( su.CREATE_TIME, '%Y-%m-%d' )) AS createTime,
                count( su.USER_ID ) AS teacherCount
            FROM
                SYS_USER su
            WHERE
                su.CREATE_TIME >= #{startTime}
                <![CDATA[
                AND su.CREATE_TIME <= #{endTime}
                ]]>
                AND su.ROLE_ID = 2
            GROUP BY
                createTime
            ) t2 ON t1.createTime = t2.createTime
    </select>
    <select id="findActiveUserCount" resultType="com.mx.ai.sports.system.vo.UserCountVo">
        SELECT
            t1.lastLoginTime AS date,
            t1.studentCount,
            IFNULL( t2.teacherCount, 0 ) AS teacherCount
        FROM
        (
            SELECT DISTINCT
            (
                DATE_FORMAT( su.LAST_LOGIN_TIME, '%Y-%m-%d' )) AS lastLoginTime,
                count( su.USER_ID ) AS studentCount
            FROM
                SYS_USER su
            WHERE
                su.LAST_LOGIN_TIME >= #{startTime}
                <![CDATA[
                AND su.LAST_LOGIN_TIME <= #{endTime}
                ]]>
                AND su.ROLE_ID = 1
            GROUP BY
                lastLoginTime
        ) t1
        LEFT JOIN (
            SELECT DISTINCT
            (
                DATE_FORMAT( su.LAST_LOGIN_TIME, '%Y-%m-%d' )) AS lastLoginTime,
                count( su.USER_ID ) AS teacherCount
            FROM
                SYS_USER su
            WHERE
                su.LAST_LOGIN_TIME >= #{startTime}
                <![CDATA[
                AND su.LAST_LOGIN_TIME <= #{endTime}
                ]]>
                AND su.ROLE_ID = 2
            GROUP BY
                lastLoginTime
            ) t2 ON t1.lastLoginTime = t2.lastLoginTime
    </select>

</mapper>
