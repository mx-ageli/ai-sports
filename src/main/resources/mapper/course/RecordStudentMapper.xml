<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mx.ai.sports.course.mapper.RecordStudentMapper">
    <update id="updatePass">
        UPDATE APP_RECORD_STUDENT SET IS_PASS = #{isPass} WHERE RECORD_STUDENT_ID = #{recordStudentId}

    </update>
    <update id="updateSigned">
        UPDATE APP_RECORD_STUDENT SET IS_ABSENT = #{isAbsent}, IS_LATE =#{isLate} WHERE RECORD_STUDENT_ID = #{recordStudentId}
    </update>
    <update id="updateSignedToGone">
        UPDATE APP_RECORD_STUDENT SET IS_GONE = #{isGone} WHERE RECORD_STUDENT_ID = #{recordStudentId}
    </update>
    <select id="findVoByCourseRecordId" resultType="com.mx.ai.sports.course.vo.StudentCourseVo">
        SELECT
            su.USER_ID AS userId,
            su.SEX AS sex,
            su.AVATAR AS avatar,
            su.FULL_NAME AS fullName,
            aps.IS_ABSENT AS isAbsent,
            aps.IS_PASS AS isPass,
            aps.IS_LATE AS isLate
        FROM
            SYS_USER su,
            APP_RECORD_STUDENT aps
        WHERE
            su.USER_ID = aps.USER_ID
            AND aps.COURSE_RECORD_ID = #{courseRecordId}
        <if test="type == 2">
            AND aps.IS_ABSENT = 1
        </if>
        <if test="type == 3">
            AND aps.IS_PASS = 1
        </if>
        <if test="type == 4">
            AND aps.IS_PASS = 0
        </if>
        ORDER BY
            aps.UPDATE_TIME ASC
    </select>
    <select id="findRecordStudentVo" resultType="com.mx.ai.sports.course.vo.RecordStudentVo">
        SELECT
            temp.*,
            ac.COURSE_NAME AS courseName,
            ac.IMAGES AS images,
            ac.IS_RUN AS isRun,
            ac.START_TIME AS courseStartTime,
            ac.END_TIME AS courseEndTime,
            ac.SIGNED_TIME AS courseSignedTime
        FROM
            (
            SELECT
                ars.COURSE_ID AS courseId,
                ars.RECORD_STUDENT_ID AS courseStudentId,
                ars.COURSE_RECORD_ID AS courseRecordId,
                ars.CREATE_TIME AS createTime,
            CASE

                    WHEN TO_DAYS(
                        NOW()) = TO_DAYS( ars.CREATE_TIME ) THEN
                        1 ELSE 0
                    END AS isToday,
                    ars.USER_ID AS userId,
                    asi.START_TIME AS startTime,
                    asi.END_TIME AS endTime,
                    ars.IS_ABSENT AS isAbsent,
                    ars.IS_LATE AS isLate,
                    ars.IS_PASS AS isPass,
                    ars.IS_GONE AS isGone,
                    asi.START_LAT AS startLat,
                    asi.START_LON AS startLon,
                    asi.START_LOCATION_NAME AS startLocationName,
                    asi.END_LAT AS endLat,
                    asi.END_LON AS endLon,
                    asi.END_LOCATION_NAME AS endLocationName
                FROM
                    APP_RECORD_STUDENT ars
                    LEFT JOIN APP_SIGNED asi ON asi.COURSE_RECORD_ID = ars.COURSE_RECORD_ID
                WHERE
                    ars.USER_ID = asi.USER_ID AND
                    ars.USER_ID = #{userId}
                ORDER BY
                    ars.CREATE_TIME DESC
                ) AS temp
                LEFT JOIN APP_COURSE ac ON temp.courseId = ac.COURSE_ID


    </select>
    <select id="getIdByCourseRecordIdUserId" resultType="java.lang.Long">
        SELECT RECORD_STUDENT_ID FROM APP_RECORD_STUDENT ars WHERE ars.COURSE_RECORD_ID = #{courseRecordId} AND USER_ID = #{userId}
    </select>
    <select id="findStudentRecordDetailBySubjectId"
            resultType="com.mx.ai.sports.course.dto.StudentRecordTotalDto">
        SELECT
            t1.userId,
            t1.sno,
            t1.fullName,
            t1.classId,
            t1.classesName,
            t1.subjectId,
            t1.subjectSeqId,
            t2.courseId,
            t2.courseName,
            t2.isPass
        FROM
            (
            SELECT
                su.USER_ID AS userId,
                su.SNO AS sno,
                su.FULL_NAME AS fullName,
                su.CLASSES_ID AS classId,
                sc.CLASSES_NAME AS classesName,
                su.SUBJECT_ID AS subjectId,
                su.SUBJECT_SEQ_ID AS subjectSeqId
            FROM
                SYS_USER su,
                SYS_CLASSES sc
            WHERE
                su.CLASSES_ID = sc.CLASSES_ID
                AND su.SUBJECT_ID = #{subjectId}
            ORDER BY
                su.CLASSES_ID
            ) t1
            LEFT JOIN (
            SELECT
                ars.COURSE_ID AS courseId,
                ac.COURSE_NAME AS courseName,
                ars.USER_ID AS userId,
                ars.IS_PASS AS isPass
            FROM
                APP_RECORD_STUDENT ars,
                APP_COURSE ac
            WHERE
                ars.COURSE_ID = ac.COURSE_ID
            AND IS_PASS = 1
            ) t2 ON t1.userId = t2.userId

    </select>
</mapper>
